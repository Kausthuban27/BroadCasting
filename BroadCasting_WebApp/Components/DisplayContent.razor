@using Microsoft.AspNetCore.SignalR.Client
@inject IParticipantsServices participantService
@inject NavigationManager Navigation

<h3 class="text-center">EventContent</h3>

<div class="table-responsive">
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>Id</th>
                <th>Content</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var item in eventContent)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Content</td>
                </tr>
            }
        </tbody>
    </table>
    <div class="align-self-center">
        <button class="btn btn-primary" @onclick="LogOut">LogOut</button>
    </div>
</div>
@code
{
    [Parameter]
    public EventCallback OnLogout { get; set; }
    public IEnumerable<EventContent> eventContent => eventContents;
    public List<EventContent> eventContents { get; set; } = new();
    private HubConnection? hubConnection;

    protected override async Task OnInitializedAsync()
    {
        var res = await participantService.GetEventContent<EventContent>();
        eventContents.AddRange(res);
        StateHasChanged();

        hubConnection = new HubConnectionBuilder()
        .WithUrl(Navigation.ToAbsoluteUri("/eventHub"))
        .Build();

        hubConnection.On<List<EventContent>>("RefreshContent", contents =>
        {
            eventContents = contents;
            InvokeAsync(StateHasChanged);
        });

        await hubConnection.StartAsync();
    }
    private async Task LogOut()
    {
        await OnLogout.InvokeAsync(null);
    }
}
